// SafeLink Warning Page Script
class WarningPage {
    constructor() {
        this.targetUrl = null;
        this.countdown = 10;
        this.countdownInterval = null;
        this.init();
    }

    init() {
        this.parseUrl();
        this.loadStats();
        this.setupEventListeners();
        this.startCountdown();
    }

    parseUrl() {
        const urlParams = new URLSearchParams(window.location.search);
        this.targetUrl = urlParams.get('url');
        
        console.log('SafeLink Warning: –ü–æ–ª—É—á–µ–Ω URL –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:', this.targetUrl);
        
        if (this.targetUrl) {
            document.getElementById('dangerUrl').textContent = this.targetUrl;
            this.analyzeUrl();
        } else {
            // –ï—Å–ª–∏ URL –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π URL –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            this.targetUrl = 'https://malware-site.com/test';
            document.getElementById('dangerUrl').textContent = this.targetUrl + ' (—Ç–µ—Å—Ç–æ–≤—ã–π URL)';
            console.warn('SafeLink Warning: URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–π URL');
            
            // –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
            this.showTestModeNotification();
            this.analyzeUrl();
        }
    }

    showTestModeNotification() {
        const notification = document.createElement('div');
        notification.innerHTML = `
            <div style="
                position: fixed;
                top: 10px;
                left: 10px;
                background: #ffc107;
                color: #000;
                padding: 10px 15px;
                border-radius: 6px;
                box-shadow: 0 2px 8px rgba(0,0,0,0.2);
                z-index: 999999;
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                font-size: 13px;
                max-width: 300px;
            ">
                <div style="font-weight: bold; margin-bottom: 5px;">
                    üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
                </div>
                <div>
                    –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–∫—Ä—ã—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–π URL –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏.
                </div>
            </div>
        `;

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–±–∏—Ä–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (notification.parentNode) {
                notification.remove();
            }
        }, 5000);

        document.body.appendChild(notification);
    }

    analyzeUrl() {
        const reasonsList = document.getElementById('reasonsList');
        const reasons = [];

        try {
            const url = new URL(this.targetUrl);
            const domain = url.hostname.toLowerCase();

            // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ–º–µ–Ω –Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
            if (domain.includes('phishing') || domain.includes('fake')) {
                reasons.push('–î–æ–º–µ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞');
            }
            
            if (domain.includes('malware') || domain.includes('virus')) {
                reasons.push('–î–æ–º–µ–Ω –∞—Å—Å–æ—Ü–∏–∏—Ä—É–µ—Ç—Å—è —Å –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–º –ü–û');
            }
            
            if (domain.includes('scam') || domain.includes('fraud')) {
                reasons.push('–î–æ–º–µ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω —Å –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ–º');
            }

            if (url.protocol === 'http:') {
                reasons.push('–°–∞–π—Ç –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (HTTPS)');
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ TLD
            const suspiciousTlds = ['.tk', '.ml', '.ga', '.cf'];
            if (suspiciousTlds.some(tld => domain.endsWith(tld))) {
                reasons.push('–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—É—é –¥–æ–º–µ–Ω–Ω—É—é –∑–æ–Ω—É');
            }

            if (reasons.length > 0) {
                reasonsList.innerHTML = reasons.map(reason => `<li>${reason}</li>`).join('');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ URL:', error);
        }
    }

    async loadStats() {
        try {
            const result = await chrome.storage.local.get(['safelink_stats']);
            if (result.safelink_stats) {
                document.getElementById('blockedCount').textContent = result.safelink_stats.blocked || 0;
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        }
    }

    setupEventListeners() {
        document.getElementById('goBackBtn').addEventListener('click', () => {
            window.history.back();
        });

        document.getElementById('allowSiteBtn').addEventListener('click', () => {
            this.allowSite();
        });

        document.getElementById('continueBtn').addEventListener('click', () => {
            this.continueTo();
        });

        // –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                window.history.back();
            }
        });
    }

    startCountdown() {
        const countdownElement = document.getElementById('countdown');
        const continueBtn = document.getElementById('continueBtn');
        
        if (!countdownElement || !continueBtn) {
            console.error('SafeLink Warning: –≠–ª–µ–º–µ–Ω—Ç—ã countdown –∏–ª–∏ continueBtn –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return;
        }
        
        continueBtn.disabled = true;
        console.log('SafeLink Warning: –ù–∞—á–∞—Ç –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç:', this.countdown, '—Å–µ–∫—É–Ω–¥');
        
        this.countdownInterval = setInterval(() => {
            this.countdown--;
            countdownElement.textContent = this.countdown;
            
            if (this.countdown <= 0) {
                clearInterval(this.countdownInterval);
                continueBtn.disabled = false;
                continueBtn.innerHTML = '–í—Å—ë —Ä–∞–≤–Ω–æ –ø–µ—Ä–µ–π—Ç–∏';
                console.log('SafeLink Warning: –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω, –∫–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
            }
        }, 1000);
    }

    async allowSite() {
        if (!this.targetUrl) return;

        try {
            await chrome.runtime.sendMessage({
                action: 'allowSite',
                url: this.targetUrl
            });

            // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤
            const result = await chrome.storage.local.get(['safelink_stats']);
            const stats = result.safelink_stats || { blocked: 0, allowed: 0 };
            stats.allowed++;
            await chrome.storage.local.set({ safelink_stats: stats });

            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–∞–π—Ç
            window.location.href = this.targetUrl;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å–∞–π—Ç–∞:', error);
            alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑—Ä–µ—à–∏—Ç—å —Å–∞–π—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        }
    }

    async continueTo() {
        console.log('SafeLink Warning: –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ URL:', this.targetUrl);
        
        if (!this.targetUrl) {
            console.error('SafeLink Warning: targetUrl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
            alert('–û—à–∏–±–∫–∞: URL –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã.');
            return;
        }

        try {
            // –ï—Å–ª–∏ —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π URL, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
            if (this.targetUrl.includes('malware-site.com/test')) {
                const proceed = confirm(
                    '–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.\n\n' +
                    '–í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –≤—ã –ø–µ—Ä–µ–π–¥–µ—Ç–µ –Ω–∞: ' + this.targetUrl + '\n\n' +
                    '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é?'
                );
                
                if (!proceed) {
                    console.log('SafeLink Warning: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –ø–µ—Ä–µ—Ö–æ–¥');
                    return;
                }
                
                // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                window.location.href = 'https://www.google.com/search?q=SafeLink+demo+completed';
                return;
            }

            // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
            const result = await chrome.storage.local.get(['safelink_stats']);
            const stats = result.safelink_stats || { blocked: 0, allowed: 0, ignored: 0 };
            stats.ignored = (stats.ignored || 0) + 1;
            await chrome.storage.local.set({ safelink_stats: stats });

            console.log('SafeLink Warning: –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞:', this.targetUrl);
            window.location.href = this.targetUrl;
        } catch (error) {
            console.error('SafeLink Warning: –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞:', error);
            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—Å–µ —Ä–∞–≤–Ω–æ –ø—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–π—Ç–∏
            window.location.href = this.targetUrl;
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', () => {
    new WarningPage();
}); 